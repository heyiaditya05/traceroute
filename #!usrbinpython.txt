#!/usr/bin/python
from scapy.all import *

def traceroute(destination, max_hops):
    for ttl in range(1, max_hops + 1):
        # Create an IP packet with the desired TTL
        ip_packet = IP(dst=destination, ttl=ttl)
        
        # Create an ICMP packet (ping request)
        icmp_packet = ICMP()

        # Combine IP and ICMP packets
        packet = ip_packet / icmp_packet

        # Send the packet
        reply = sr1(packet, verbose=False, timeout=1)
        
        if reply is None:
            # No reply received, print an asterisk
            print(f"{ttl}: *")
        elif reply.haslayer(ICMP) and reply.getlayer(ICMP).type == 0:
            # ICMP echo reply received, print the source IP
            print(f"{ttl}: {reply.src}")
            if reply.src == destination:
                # Destination reached, break the loop
                break
        else:
            # Other ICMP packet received, print a warning
            print(f"{ttl}: ICMP packet received from {reply.src}")

if __name__ == "__main__":
    destination = "1.2.3.4"  # Replace with the desired destination IP
    max_hops = 30  # Maximum number of hops to try

    print(f"Traceroute to {destination}, max hops: {max_hops}")
    traceroute(destination, max_hops)
